# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

variables:
- template: ../../config-infra-prod.yml

# This sets up the optional triggers for the running the pipeline.
# Note: This pipeline is triggered by a manual trigger.
#       This is to avoid running the pipeline when the pipeline is updated.
#
#       See the documentation for more information.
#       https://learn.microsoft.com/en-us/azure/devops/pipelines/build/triggers?view=azure-devops
trigger:
- none

# This the image that is used to run the pipeline
# Note: This is the image that is used to run the pipeline.
#       The image is a Ubuntu 20.04 image.
#
#       See the documentation for more information.
#       https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops&tabs=yaml
pool:
  vmImage: $(ap_vm_image)


stages :

  - stage: CreateWorkspace
    displayName: Create Workspace with Resource Group
    jobs:
    - job: CreateRGandWorkspace
      displayName: Create Workspace and Resource Group
      steps:
      - checkout: self
        path: s/

        # Install the Azure CLI
        # Note: All pipelines need the ML extension to the Azure CLI. We start with installing the AZ CLI.
        #
        #       See the documentation for more information.
        #       https://learn.microsoft.com/en-us/cli/azure/install-azure-cli
      - template: /aml-cli-v2/install-az-cli.yml

        # Install the Azure ML CLI
        # Note: The step uses Azure CLI to install the Azure ML CLI.
        #
        #       See the documentation for more information.
        #       https://learn.microsoft.com/en-us/azure/machine-learning/how-to-configure-cli?tabs=public
      - template: /aml-cli-v2/install-aml-cli.yml

        # Create the resource group
        # Note: The step uses Azure CLI to create the resource group.
        #
        #       See the documentation for more information.
        #       https://docs.microsoft.com/en-us/cli/azure/group?view=azure-cli-latest#az_group_create
      - template: /infra/create-resource-group.yml
        parameters:
          rg_name:  $(resource_group)
          location: $(location)

        # Create the Azure ML workspace
        # Note: The step uses Azure CLI to create the Azure ML workspace.
        #
        #       See the documentation for more information.
        #       https://docs.microsoft.com/en-us/cli/azure/extension?view=azure-cli-latest#az_extension_add
      - template: /infra/create-workspace.yml
        parameters:
          rg_name: $(resource_group)
          workspace_name: $(aml_workspace)
          location: $(location)

        # Connect to the Azure ML workspace
        # Note: The step configures the default workspace and resourcse group for the Azure ML CLI.
        #       Rather than pass the workspace name and resource group name to each command,
        #       the RG and workspace are set as the default workspace.
        #       The step uses Azure ML CLI to connect to the workspace.
        #
        #       See the documentation for more information.
        #       https://learn.microsoft.com/en-us/azure/machine-learning/how-to-manage-environments-v2?tabs=cli#connect-to-the-workspace
      - template: /aml-cli-v2/connect-to-workspace.yml

        # Create the compute target.
        # Note: This is a compute resource for training the model.
        #       The create compute steps checks if the compute exists or not.
        #       This is to avoid errors when the compute does not already exists.
        #       If it does not exist, it creates it. If it does exist, it skips the creation.
        #       The step uses Azure ML CLI to create the compute target.
        #
        #       See the documentation for more information.
        #       https://learn.microsoft.com/en-us/azure/machine-learning/how-to-train-model?tabs=azurecli#2-create-a-compute-resource-for-training
      - template: /aml-cli-v2/create-compute.yml
        parameters:
          cluster_name:   $(training_target)
          size:           $(training_target_sku)
          min_instances:  ${{ variables.training_target_min_nodes }}
          max_instances:  ${{ variables.training_target_max_nodes }}
          cluster_tier:   $(training_target_tier)

